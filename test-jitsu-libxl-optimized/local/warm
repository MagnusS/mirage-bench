#!/bin/bash

TEST_PATH=$(dirname $0)
RESULT_PATH=$(pwd)
hostinfo | grep Darwin && IN_OSX=1 || IN_OSX=0

REPS=100

echo "Local test executing"

echo "Wait for remote to open DNS port"
wait_for_remote_port_open 53
sleep 1

${SSH_EXEC} "sudo virsh list --all"

# use ping to get remote IP, works for mdns + dns
REMOTE_IP=$(ping -c1 $REMOTE_HOST | head -n1 | cut -f2 -d"(" | cut -f1 -d")")
echo "remote ip is $REMOTE_IP"

LOCAL_IP=$(${SSH_EXEC} "lastlog | grep mirage | cut -b27-42")
echo "local ip is $LOCAL_IP"

if [ $IN_OSX == 1 ]; then
	# this only works in osx, see ip route get x.x.x.x in linux
	IF=$(route -n get $REMOTE_IP | grep interface | cut -d":" -f2 | tr -d " ")
	TCPDUMP=tcpdump
else # linux
	IF=$(ip route get 10.0.1.140 | grep dev | cut -f 3 -d " " | tr -d ' ')
	TCPDUMP="sudo tcpdump"
fi

echo "using interface $IF"

echo "Starting unikernels..."
${SSH_EXEC} "sudo virsh start test-unikernel1" 
${SSH_EXEC} "sudo virsh start test-unikernel2"
${SSH_EXEC} "sudo virsh start test-unikernel3"
${SSH_EXEC} "sudo virsh start test-unikernel4"
${SSH_EXEC} "sudo virsh start test-unikernel5"

sleep 10

unikernel_counter=1
for f in $(seq 1 $REPS); do
#    unikernel_counter=$(($unikernel_counter % 5 + 1))
    echo "Repetition $f of $REPS"
    $TCPDUMP -ni $IF -s 1024 -w $RESULT_PATH/warm_dump_${f}.pcap -U \
        "(port 53 or port 80) and 
         ((src $REMOTE_IP and dst $LOCAL_IP) or 
         (src $LOCAL_IP and dst $REMOTE_IP) or
         (src $UNIKERNEL_IP1 and dst $LOCAL_IP) or
         (src $UNIKERNEL_IP2 and dst $LOCAL_IP) or
         (src $UNIKERNEL_IP3 and dst $LOCAL_IP) or
         (src $UNIKERNEL_IP4 and dst $LOCAL_IP) or
         (src $UNIKERNEL_IP5 and dst $LOCAL_IP) or
         (src $LOCAL_IP and dst $UNIKERNEL_IP1) or
         (src $LOCAL_IP and dst $UNIKERNEL_IP2) or
         (src $LOCAL_IP and dst $UNIKERNEL_IP3) or
         (src $LOCAL_IP and dst $UNIKERNEL_IP4) or
         (src $LOCAL_IP and dst $UNIKERNEL_IP5))" &
    TCPDUMP_PID=$!

    sleep 1 # give tcpdump time to start

    python $TEST_PATH/query_and_connect.py $REMOTE_IP www.unikernel${unikernel_counter}.com get
    sleep 3

    sudo kill $TCPDUMP_PID

    echo "Libvirt status:"
    ${SSH_EXEC} "sudo virsh list --all"

done

${SSH_EXEC} sudo pkill jitsu

${SSH_EXEC} "sudo virsh destroy test-unikernel1" 
${SSH_EXEC} "sudo virsh destroy test-unikernel2"
${SSH_EXEC} "sudo virsh destroy test-unikernel3"
${SSH_EXEC} "sudo virsh destroy test-unikernel4"
${SSH_EXEC} "sudo virsh destroy test-unikernel5"

echo "Waiting 60 seconds"
sleep 60
kill_remote

